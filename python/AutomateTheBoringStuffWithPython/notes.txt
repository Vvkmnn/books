Lesson 3: Writing Our First Program
 - Type programs into the file editor
 - The execution starts the top and moves down
 -  Comments are ignored by Python
 -  Functions are mini-programs iny our program
 - print() displays the value passed into it
 - intput() lets user type in a value
 - len() takes a string value and returns an integer value of the string's length
 - int(), str(), and float() convert value's data type

Lesson 4: Flow ChartsFlow Charts and Basic Flow Control Concepts
  - Boolean Data Type: True, False
  - Comparison Operators: ==, !=, <, >, <=, >=
  - == is comparison, = is assignment
  - Boolean Operators: and, or, not

Lesson 5: If, Else, and Elif Statements
  - An if statement can be used to conditionally execute code, depending on whether or not the if statement's condition is True or False.
  - An elif ("elise if") statement can follow an if statement. Its block executes if its condition is True and all the previous conditions have been False.
  - An else statement comes at the end. It's block is executed if all the previous conditions have been False.
  - The values 0, 0.0, and the empty string are considered Falsey values. When used in conditions they are considered False. You can always see for yourself which values are Truthy or Falsey by passing them to the bool() function.

Lesson 6: While Loops
  - When the execution reaches the end of a while statement's block, it jumps back to the start to re-check the condition.
  - Press Ctrl-C to interrupt an infinite loop.
  - A break statement causes the execution to immediately leave the loop without re-checking the condition.
  A continue statement causes the exeuction to immediately jump back to the start of the loop and re-check the condition.

Lecture 7: For Loops
   - For loops will loop a specific number of times.
   - The range() function called with one, two, or three arguments.
   - break and continue can be used in for loops.

Lecture 8: Python's Built-In Functions
   - You can import modules and get access to new functions.
   - The modules that come with Python are called the standard library, but you can also install third-party modules using the pip tool.
   - The sys.exit() function will immediately quit your program.
   - The pyperclip third-party module has copy() and paste() functions for reading and writing text to the clipboard.

Lecture 9: Writing Your Own Functions
   - Functions are like mini-pgroams inside your program.
   - The main point of functions is to get rid of duplicate code.
   - The def statement defines a function.
   - The input to functions are arguments. The output is the return value.
   - The parameters are the variables in between the function's parentheses in the def statement.
   - The return value is specified using the return statement.
   - Every function has a return value. If your function doesn't have a return statement, the default return value is None.
   - Keyword arguments to functions are usually for optional arguments. The print() function has keyword arguments end and sep.

Lecture 10: Global and Local Scopes
   - A scope can be thought of as an area of the source code, and as a container of variables.
   - The global scope is code outside of all functions. Variables assigned here are global variables.
   - Each function's code is in its own local scope. Variables assigned here are local variables.
   - Code in the global scope cannot use any local variables.
   - Code in a function's local scope cannot use variables in any other function's local scope.
   - If there's an assignment statement for a variable ina  function, that is a local variable.

Lecture 11: Handlng Errors with try/except
   - A divid-by-zero happens when Python divides a number by 0.
   - Errors cause the program to crash.
   - An error that happens inside a try block will cause code in the except block to execute. That code can handle the error or display a message to the user so that the program can keep going.
   Lecture 12: Writing a "Guess the Number Program"

Lecture 12: Writing a "Guess the Number Program
  - Cover all concepts from previous   lessons for Python Recipe.

Lecture 13: The List Data Type
   - A list is a value that contains multiple values.
   - The values in a list are also called items.
   - You can access items in a list with it's integer index.
   - The indexes start at 0, not 1.
   - You can also use negative indexes. -1 refers to the last item, -2 refers to the second to last item, and so on.
   - You can multiple items from the list using a slice.
   - The slice has two indexes. The new list's items start at the first index and go up to, but doesn't include, the second index.
   - The len() function, concatenation, and replication work the same way with lists as they do with strings.
   - You can convert a value into a list by passing it to the list() function.

Lecture 14: For Loops with Lists, Multiple ASsignment, and Augmented Operators
   - For loops technically iterate over the values in a list.
   - The range() function returns a list-like value, which can be passed to the list() function if you neeed an actual list value.
   - Variables can swap their values using multiple assignment.
   - Augmented assignment operaters like += are used as shortcuts.

Lecture 15: List Methods
   - Methods are functions that are "called on"  values.
   - The index() list method returns the index of an item in the List.
   - The append() list method adds a value anywhere inside a list.
   - The insert() list method removes an item, specified by the value, from a list.
   - The sort() method reverse=True keyword argument can sort in reverse order.
   - Sorting happens in "ASCII-betical" order. To sort normally, pass key=str.lower.
   - These list methods operate on the list "in place", rather than returning a new list value.
